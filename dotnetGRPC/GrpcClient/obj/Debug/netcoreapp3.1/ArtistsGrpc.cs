// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/artists.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer.Protos {
  public static partial class RemoteArtist
  {
    static readonly string __ServiceName = "RemoteArtist";

    static readonly grpc::Marshaller<global::GrpcServer.Protos.ArtistLookUpModel> __Marshaller_ArtistLookUpModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.Protos.ArtistLookUpModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.Protos.ArtistModel> __Marshaller_ArtistModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.Protos.ArtistModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.Protos.NewArtistsRequest> __Marshaller_NewArtistsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.Protos.NewArtistsRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcServer.Protos.ArtistLookUpModel, global::GrpcServer.Protos.ArtistModel> __Method_GetArtistInfo = new grpc::Method<global::GrpcServer.Protos.ArtistLookUpModel, global::GrpcServer.Protos.ArtistModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetArtistInfo",
        __Marshaller_ArtistLookUpModel,
        __Marshaller_ArtistModel);

    static readonly grpc::Method<global::GrpcServer.Protos.NewArtistsRequest, global::GrpcServer.Protos.ArtistModel> __Method_GetNewArtists = new grpc::Method<global::GrpcServer.Protos.NewArtistsRequest, global::GrpcServer.Protos.ArtistModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetNewArtists",
        __Marshaller_NewArtistsRequest,
        __Marshaller_ArtistModel);

    static readonly grpc::Method<global::GrpcServer.Protos.ArtistModel, global::GrpcServer.Protos.NewArtistsRequest> __Method_InsertArtists = new grpc::Method<global::GrpcServer.Protos.ArtistModel, global::GrpcServer.Protos.NewArtistsRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertArtists",
        __Marshaller_ArtistModel,
        __Marshaller_NewArtistsRequest);

    static readonly grpc::Method<global::GrpcServer.Protos.ArtistModel, global::GrpcServer.Protos.NewArtistsRequest> __Method_UpdateArtists = new grpc::Method<global::GrpcServer.Protos.ArtistModel, global::GrpcServer.Protos.NewArtistsRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateArtists",
        __Marshaller_ArtistModel,
        __Marshaller_NewArtistsRequest);

    static readonly grpc::Method<global::GrpcServer.Protos.ArtistLookUpModel, global::GrpcServer.Protos.NewArtistsRequest> __Method_DeleteArtists = new grpc::Method<global::GrpcServer.Protos.ArtistLookUpModel, global::GrpcServer.Protos.NewArtistsRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteArtists",
        __Marshaller_ArtistLookUpModel,
        __Marshaller_NewArtistsRequest);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.Protos.ArtistsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for RemoteArtist</summary>
    public partial class RemoteArtistClient : grpc::ClientBase<RemoteArtistClient>
    {
      /// <summary>Creates a new client for RemoteArtist</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RemoteArtistClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RemoteArtist that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RemoteArtistClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RemoteArtistClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RemoteArtistClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcServer.Protos.ArtistModel GetArtistInfo(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetArtistInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.Protos.ArtistModel GetArtistInfo(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetArtistInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.ArtistModel> GetArtistInfoAsync(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetArtistInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.ArtistModel> GetArtistInfoAsync(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetArtistInfo, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcServer.Protos.ArtistModel> GetNewArtists(global::GrpcServer.Protos.NewArtistsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNewArtists(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcServer.Protos.ArtistModel> GetNewArtists(global::GrpcServer.Protos.NewArtistsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetNewArtists, null, options, request);
      }
      public virtual global::GrpcServer.Protos.NewArtistsRequest InsertArtists(global::GrpcServer.Protos.ArtistModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertArtists(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.Protos.NewArtistsRequest InsertArtists(global::GrpcServer.Protos.ArtistModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertArtists, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.NewArtistsRequest> InsertArtistsAsync(global::GrpcServer.Protos.ArtistModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertArtistsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.NewArtistsRequest> InsertArtistsAsync(global::GrpcServer.Protos.ArtistModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertArtists, null, options, request);
      }
      public virtual global::GrpcServer.Protos.NewArtistsRequest UpdateArtists(global::GrpcServer.Protos.ArtistModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateArtists(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.Protos.NewArtistsRequest UpdateArtists(global::GrpcServer.Protos.ArtistModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateArtists, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.NewArtistsRequest> UpdateArtistsAsync(global::GrpcServer.Protos.ArtistModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateArtistsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.NewArtistsRequest> UpdateArtistsAsync(global::GrpcServer.Protos.ArtistModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateArtists, null, options, request);
      }
      public virtual global::GrpcServer.Protos.NewArtistsRequest DeleteArtists(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteArtists(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.Protos.NewArtistsRequest DeleteArtists(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteArtists, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.NewArtistsRequest> DeleteArtistsAsync(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteArtistsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.NewArtistsRequest> DeleteArtistsAsync(global::GrpcServer.Protos.ArtistLookUpModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteArtists, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RemoteArtistClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RemoteArtistClient(configuration);
      }
    }

  }
}
#endregion
